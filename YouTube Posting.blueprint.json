{
    "name": "YouTube - Posting",
    "flow": [
        {
            "id": 20,
            "module": "youtube:pollingVideos",
            "version": 4,
            "parameters": {
                "__IMTCONN__": 11744040,
                "channelId": "UCFM_5A4lPdZfLtafbI0hZ4g",
                "publishedBefore": null,
                "publishedAfter": null,
                "limit": 2
            },
            "mapper": {},
            "metadata": {
                "designer": {
                    "x": 118,
                    "y": -352
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "My YouTube connection (Romain Taugourdeau <romtaug@gmail.com>)",
                            "data": {
                                "scoped": "true",
                                "connection": "youtube"
                            }
                        },
                        "channelId": {
                            "rpcSearch": {
                                "label": null,
                                "value": "UCFM_5A4lPdZfLtafbI0hZ4g"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:youtube",
                        "label": "Connection",
                        "required": true
                    },
                    {
                        "type": "hidden"
                    },
                    {
                        "name": "channelId",
                        "type": "text",
                        "label": "Channel ID",
                        "required": true
                    },
                    {
                        "name": "publishedBefore",
                        "type": "date",
                        "label": "Published Before",
                        "time": true
                    },
                    {
                        "name": "publishedAfter",
                        "type": "date",
                        "label": "Published After",
                        "time": true
                    },
                    {
                        "name": "limit",
                        "type": "uinteger",
                        "label": "Limit",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 21,
            "module": "youtube:universal",
            "version": 4,
            "parameters": {
                "__IMTCONN__": 11744040
            },
            "mapper": {
                "url": "/v3/commentThreads?part=snippet",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": "{\r\n  \"snippet\": {\r\n    \"videoId\": \"{{20.videoId}}\",\r\n    \"topLevelComment\": {\r\n      \"snippet\": {\r\n        \"textOriginal\": \"Likez et partagez si vous validez üí° Et vous, quel est le sujet qui vous chauffe le plus en ce moment ?\"\r\n      }\r\n    }\r\n  }\r\n}"
            },
            "metadata": {
                "designer": {
                    "x": 481,
                    "y": -345
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "My YouTube connection (Romain Taugourdeau <romtaug@gmail.com>)",
                            "data": {
                                "scoped": "true",
                                "connection": "youtube"
                            }
                        }
                    },
                    "expect": {
                        "method": {
                            "mode": "chose",
                            "label": "POST"
                        },
                        "headers": {
                            "mode": "chose",
                            "items": [
                                null
                            ]
                        },
                        "qs": {
                            "mode": "chose"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:youtube",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "url",
                        "type": "text",
                        "label": "URL",
                        "required": true
                    },
                    {
                        "name": "method",
                        "type": "select",
                        "label": "Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "GET",
                                "POST",
                                "PUT",
                                "PATCH",
                                "DELETE"
                            ]
                        }
                    },
                    {
                        "name": "headers",
                        "type": "array",
                        "label": "Headers",
                        "spec": {
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Key"
                                },
                                {
                                    "name": "value",
                                    "type": "text",
                                    "label": "Value"
                                }
                            ],
                            "type": "collection",
                            "label": "Header",
                            "name": "value"
                        }
                    },
                    {
                        "name": "qs",
                        "type": "array",
                        "label": "Query String",
                        "spec": {
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Key"
                                },
                                {
                                    "name": "value",
                                    "type": "text",
                                    "label": "Value"
                                }
                            ],
                            "type": "collection",
                            "label": "Query Parameter",
                            "name": "value"
                        }
                    },
                    {
                        "name": "body",
                        "type": "any",
                        "label": "Body"
                    }
                ]
            }
        },
        {
            "id": 22,
            "module": "util:FunctionSleep",
            "version": 1,
            "parameters": {},
            "mapper": {
                "duration": "10"
            },
            "metadata": {
                "designer": {
                    "x": 902,
                    "y": -343
                },
                "restore": {},
                "expect": [
                    {
                        "name": "duration",
                        "type": "uinteger",
                        "label": "Delay",
                        "validate": {
                            "min": 1,
                            "max": 300
                        },
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 10,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 11538223
            },
            "mapper": {
                "model": "chatgpt-4o-latest",
                "top_p": "1",
                "select": "chat",
                "messages": [
                    {
                        "role": "system",
                        "content": "R√©cup√®re la date d'ajourd'hui sur : https://www.dateaujourdhui.com/ et r√©cup√®re le maximum d'acticles du uniquement jour uniquement en ligne.Date: {{formatDate(now; \"YYYY-MM-DD\")}}. V√©rifie la v√©racit√© des faits.\n\nle JSON demand√© : {\"script\":\"...\",\"title\":\"...\",\"description\":\"...\",\"tags\":\"[\"urgent\", \"client\"]\",\"comment\":\"...\"} (exemple)\n\nTu es \"Mister Plavon\", cr√©ateur finance FR pour des shorts YouTube. Style ULTRA EXPRESSIF Vulguaire, PROACTIF, HARDCORE lib√©rale antiwoke et drole positif sans emoji. L'√©tat nous empechent de sortir de la classe moyenne #cestnicolasquipaie reprends toujours ce concept.\nContraintes:\n- D√©but EXACT: \"Salut bande dopportunistes, je suis Mister Plavon !!\"\n- Un vrai conseil choc marquant compact tr√®s tr√®s court, mots marquants violants SANS PONCTUATION PHRASE COURTE -> 80 caract√®re grand maximum\n- Th√®mes : ACTUALIT√â EN FRANCE aujourd'hui (tu peux clash punchline des personnalit√©s connus) et MEILLEURE OPPORTUNIT√â DU MOMENT (business, investissement √† la Michael Burry, Fintech ou IA, bon plan actuel, profiter, opportunit√© de vie, choix de vie, formation √† suivre, sport bien-√™tre, fiscalit√©-patimoine mariage, classes d'actifs financiers).\n- Si il y a des chiffres √©cris les en toutes lettres.\n- Sortie STRICTEMENT en JSON, SANS AUCUN TEXTE HORS JSON\n\n- La \"description\" DOIT se terminer par au moins 10 hashtags FR pertinents (avec #, s√©par√©s par des espaces) tu dois syst√©matiquement mettre le suivant : #cestnicolasquipaie et dans les tags aussi.\n- \"script\" tr√®s court‚â§  150 caract√®res maximum AUT TOTAL;\n\"title\" pute √† clique avec des √©mojis ‚â§ 95 caract√®res avec des √©mojis ; \"description\" ‚â§ 500 caract√®res (hashtags inclus) plus long d√©taill√© et bien expliqu√© avec des √©mojis et des beaux paragraphes; \"tags\" le maximum possible tendances pertinents (au moins 10) -> la vid√©o doit √™tre la plus virale possible; \"comment\" le commentaire que je poste en premier, une question ouverte √† mes abonn√©s pour faire r√©agir mes abonn√©s dans les commentaires"
                    }
                ],
                "max_tokens": "2048",
                "temperature": "0.9",
                "n_completions": "1",
                "response_format": "json_object",
                "parseJSONResponse": true
            },
            "metadata": {
                "designer": {
                    "x": 900,
                    "y": 0
                },
                "restore": {
                    "expect": {
                        "stop": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "chose",
                            "label": "chatgpt-4o-latest (system)"
                        },
                        "select": {
                            "label": "Create a Chat Completion (GPT and o1 models)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "Developer / System"
                                    }
                                }
                            ]
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "tool_choice": {
                            "mode": "chose",
                            "label": "Empty"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "JSON Object"
                        },
                        "parseJSONResponse": {
                            "mode": "chose"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            },
                            "label": "Final YouTube"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability"
                        },
                        "type": "array",
                        "label": "Token Probability"
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "tool_choice",
                        "type": "select",
                        "label": "Tool Choice",
                        "validate": {
                            "enum": [
                                "none",
                                "auto",
                                "required"
                            ]
                        }
                    },
                    {
                        "name": "stop",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Stop Sequence"
                        },
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter"
                        },
                        "type": "array",
                        "label": "Other Input Parameters"
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "max_tokens",
                        "type": "uinteger",
                        "label": "Max Completion Tokens"
                    },
                    {
                        "name": "messages",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": {
                                        "store": [
                                            {
                                                "label": "User",
                                                "value": "user",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    },
                                                    {
                                                        "name": "imageInputType",
                                                        "type": "select",
                                                        "label": "Image Input Type",
                                                        "options": [
                                                            {
                                                                "label": "URL",
                                                                "value": "url",
                                                                "nested": [
                                                                    {
                                                                        "help": "Make sure to use a publicly accessible URL.\nYou can test if your image is publicly accessible by opening the link in an incognito tab.",
                                                                        "name": "imageUrl",
                                                                        "type": "url",
                                                                        "label": "Image URL"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "label": "Image File",
                                                                "value": "file",
                                                                "nested": [
                                                                    {
                                                                        "name": "imageFile",
                                                                        "spec": [
                                                                            {
                                                                                "help": "Accepted extensions: `.jpg`, `.jpeg`, `.png`, `.webp` and `.gif`.",
                                                                                "name": "imageFilename",
                                                                                "type": "filename",
                                                                                "label": "Image Filename",
                                                                                "semantic": "file:name",
                                                                                "extension": [
                                                                                    "jpg",
                                                                                    "jpeg",
                                                                                    "png",
                                                                                    "webp",
                                                                                    "gif"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "name": "imageData",
                                                                                "type": "buffer",
                                                                                "label": "Image Data",
                                                                                "semantic": "file:data"
                                                                            }
                                                                        ],
                                                                        "type": "collection",
                                                                        "label": "Image"
                                                                    }
                                                                ]
                                                            }
                                                        ],
                                                        "mappable": false
                                                    },
                                                    {
                                                        "help": "Recommended value: `Auto`",
                                                        "name": "imageDetail",
                                                        "type": "select",
                                                        "label": "Image Detail",
                                                        "options": [
                                                            {
                                                                "label": "Auto",
                                                                "value": "auto",
                                                                "default": true
                                                            },
                                                            {
                                                                "label": "High",
                                                                "value": "high"
                                                            },
                                                            {
                                                                "label": "Low",
                                                                "value": "low"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "label": "Assistant",
                                                "value": "assistant",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    },
                                                    {
                                                        "mode": "edit",
                                                        "name": "tool_calls",
                                                        "spec": {
                                                            "spec": [
                                                                {
                                                                    "name": "type",
                                                                    "type": "hidden",
                                                                    "default": "function"
                                                                },
                                                                {
                                                                    "help": "Map this directly from the output of a previous **Create a Completion** module. Look for `Choices[]: Message.Tool Calls[]: ID`.",
                                                                    "name": "id",
                                                                    "type": "text",
                                                                    "label": "Tool call ID"
                                                                },
                                                                {
                                                                    "name": "function",
                                                                    "spec": [
                                                                        {
                                                                            "help": "The name of the function previously called.",
                                                                            "name": "name",
                                                                            "type": "text",
                                                                            "label": "Name",
                                                                            "required": true
                                                                        },
                                                                        {
                                                                            "help": "The arguments previously output by the AI.",
                                                                            "name": "arguments",
                                                                            "type": "text",
                                                                            "label": "Arguments",
                                                                            "required": true
                                                                        }
                                                                    ],
                                                                    "type": "collection",
                                                                    "label": "Function"
                                                                }
                                                            ],
                                                            "type": "collection",
                                                            "label": "Tool Call"
                                                        },
                                                        "type": "array",
                                                        "label": "Tool Calls",
                                                        "labels": {
                                                            "add": "Add tool call"
                                                        },
                                                        "mappable": {
                                                            "help": "You can map the entire `Choices[]: Message.Tool Calls` array from a previous Create a Completion module here."
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "label": "Developer / System",
                                                "value": "system",
                                                "nested": [
                                                    {
                                                        "help": "Text content of the message on behalf of the selected __Role__.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content"
                                                    }
                                                ]
                                            },
                                            {
                                                "label": "Tool",
                                                "value": "tool",
                                                "nested": [
                                                    {
                                                        "help": "The return of the function. This role should only be used when you have processed a previous function call and want to send the output of the function execution back to the AI.",
                                                        "name": "content",
                                                        "type": "text",
                                                        "label": "Text Content",
                                                        "required": true
                                                    },
                                                    {
                                                        "help": "Map this directly from the output of a previous **Create a Completion** module. Look for `Choices[]: Message.Tool Calls[]: ID`.",
                                                        "name": "tool_call_id",
                                                        "type": "text",
                                                        "label": "Tool Call ID.",
                                                        "required": true
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "required": true
                                }
                            ],
                            "type": "collection",
                            "label": "Message"
                        },
                        "type": "array",
                        "label": "Messages",
                        "required": true
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "prediction",
                        "type": "text",
                        "label": "Predicted Outputs"
                    },
                    {
                        "name": "parseJSONResponse",
                        "type": "boolean",
                        "label": "Parse JSON Response",
                        "required": true
                    }
                ],
                "interface": [
                    {
                        "name": "result",
                        "type": "any",
                        "label": "Result"
                    },
                    {
                        "name": "id",
                        "type": "text",
                        "label": "ID"
                    },
                    {
                        "name": "object",
                        "type": "text",
                        "label": "Object"
                    },
                    {
                        "name": "created",
                        "type": "date",
                        "label": "Created"
                    },
                    {
                        "name": "model",
                        "type": "text",
                        "label": "Model"
                    },
                    {
                        "name": "choices",
                        "spec": [
                            {
                                "name": "text",
                                "type": "text",
                                "label": "Text"
                            },
                            {
                                "name": "index",
                                "type": "number",
                                "label": "Index"
                            },
                            {
                                "name": "logprobs",
                                "type": "text",
                                "label": "Log Probs"
                            },
                            {
                                "name": "finish_reason",
                                "type": "text",
                                "label": "Finish Reason"
                            },
                            {
                                "name": "message",
                                "spec": [
                                    {
                                        "name": "role",
                                        "type": "text",
                                        "label": "Role"
                                    },
                                    {
                                        "name": "content",
                                        "type": "text",
                                        "label": "Content"
                                    },
                                    {
                                        "name": "tool_calls",
                                        "spec": [
                                            {
                                                "name": "id",
                                                "type": "text",
                                                "label": "ID"
                                            },
                                            {
                                                "name": "type",
                                                "type": "text",
                                                "label": "Type"
                                            },
                                            {
                                                "name": "function",
                                                "spec": [
                                                    {
                                                        "name": "name",
                                                        "type": "text",
                                                        "label": "Name"
                                                    },
                                                    {
                                                        "name": "arguments",
                                                        "type": "text",
                                                        "label": "Arguments"
                                                    }
                                                ],
                                                "type": "collection",
                                                "label": "Function"
                                            }
                                        ],
                                        "type": "array",
                                        "label": "Tool Calls"
                                    },
                                    {
                                        "name": "refusal",
                                        "type": "text",
                                        "label": "Refusal"
                                    },
                                    {
                                        "name": "annotations",
                                        "spec": [
                                            {
                                                "name": "type",
                                                "type": "text",
                                                "label": "Type"
                                            },
                                            {
                                                "name": "url_citation",
                                                "spec": [
                                                    {
                                                        "name": "end_index",
                                                        "type": "number",
                                                        "label": "End Index"
                                                    },
                                                    {
                                                        "name": "start_index",
                                                        "type": "number",
                                                        "label": "Start Index"
                                                    },
                                                    {
                                                        "name": "title",
                                                        "type": "text",
                                                        "label": "Title"
                                                    },
                                                    {
                                                        "name": "url",
                                                        "type": "text",
                                                        "label": "URL"
                                                    }
                                                ],
                                                "type": "collection",
                                                "label": "URL Citation"
                                            }
                                        ],
                                        "type": "array",
                                        "label": "Annotations"
                                    }
                                ],
                                "type": "collection",
                                "label": "Message"
                            }
                        ],
                        "type": "array",
                        "label": "Choices"
                    },
                    {
                        "name": "usage",
                        "spec": [
                            {
                                "name": "prompt_tokens",
                                "type": "number",
                                "label": "Prompt Tokens"
                            },
                            {
                                "name": "completion_tokens",
                                "type": "text",
                                "label": "Completion Tokens"
                            },
                            {
                                "name": "total_tokens",
                                "type": "number",
                                "label": "Total Tokens"
                            },
                            {
                                "name": "prompt_tokens_details",
                                "spec": [
                                    {
                                        "name": "cached_tokens",
                                        "type": "uinteger",
                                        "label": "Cached Tokens"
                                    },
                                    {
                                        "name": "text_tokens",
                                        "type": "uinteger",
                                        "label": "Text Tokens"
                                    },
                                    {
                                        "name": "image_tokens",
                                        "type": "uinteger",
                                        "label": "Image Tokens"
                                    },
                                    {
                                        "name": "audio_tokens",
                                        "type": "uinteger",
                                        "label": "Audio Tokens"
                                    }
                                ],
                                "type": "collection",
                                "label": "Prompt Tokens Details"
                            },
                            {
                                "name": "completion_tokens_details",
                                "spec": [
                                    {
                                        "name": "reasoning_tokens",
                                        "type": "uinteger",
                                        "label": "Reasoning Tokens"
                                    },
                                    {
                                        "name": "text_tokens",
                                        "type": "uinteger",
                                        "label": "Text Tokens"
                                    },
                                    {
                                        "name": "audio_tokens",
                                        "type": "uinteger",
                                        "label": "Audio Tokens"
                                    },
                                    {
                                        "name": "accepted_prediction_tokens",
                                        "type": "uinteger",
                                        "label": "Accepted Prediction Tokens"
                                    },
                                    {
                                        "name": "rejected_prediction_tokens",
                                        "type": "uinteger",
                                        "label": "Rejected Prediction Tokens"
                                    }
                                ],
                                "type": "collection",
                                "label": "Completion Tokens Details"
                            }
                        ],
                        "type": "collection",
                        "label": "Usage"
                    },
                    {
                        "name": "service_tier",
                        "type": "text",
                        "label": "Service Tier"
                    },
                    {
                        "name": "system_fingerprint",
                        "type": "text",
                        "label": "System Fingerprint"
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 16,
            "module": "regexp:Replace",
            "version": 1,
            "parameters": {},
            "mapper": {
                "text": "{{10.result.script}}",
                "value": " ",
                "global": false,
                "pattern": "[']",
                "multiline": false,
                "sensitive": true,
                "singleline": false
            },
            "metadata": {
                "designer": {
                    "x": 1200,
                    "y": 0
                },
                "restore": {
                    "expect": {
                        "global": {
                            "mode": "chose"
                        },
                        "multiline": {
                            "mode": "chose"
                        },
                        "sensitive": {
                            "mode": "chose"
                        },
                        "singleline": {
                            "mode": "chose"
                        }
                    }
                },
                "expect": [
                    {
                        "name": "pattern",
                        "type": "text",
                        "label": "Pattern",
                        "required": true
                    },
                    {
                        "name": "value",
                        "type": "text",
                        "label": "New value"
                    },
                    {
                        "name": "global",
                        "type": "boolean",
                        "label": "Global match",
                        "required": true
                    },
                    {
                        "name": "sensitive",
                        "type": "boolean",
                        "label": "Case sensitive",
                        "required": true
                    },
                    {
                        "name": "multiline",
                        "type": "boolean",
                        "label": "Multiline",
                        "required": true
                    },
                    {
                        "name": "singleline",
                        "type": "boolean",
                        "label": "Singleline",
                        "required": true
                    },
                    {
                        "name": "text",
                        "type": "text",
                        "label": "Text"
                    }
                ]
            }
        },
        {
            "id": 8,
            "module": "joggai:TalkingAvatar",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 11539641
            },
            "mapper": {
                "script": "{{16.text}}",
                "voice_id": "tb_a94bd3e9f3d140b19f881618fee4d845",
                "avatar_id": "1208",
                "audioSource": "script",
                "avatar_type": 0,
                "screen_style": 1,
                "additionalOptions": "hide"
            },
            "metadata": {
                "designer": {
                    "x": 1500,
                    "y": 0
                },
                "restore": {
                    "expect": {
                        "audioSource": {
                            "mode": "chose",
                            "label": "Text Script"
                        },
                        "avatar_type": {
                            "mode": "chose",
                            "label": "Jogg Avatar"
                        },
                        "screen_style": {
                            "mode": "chose",
                            "label": "With Background"
                        },
                        "additionalOptions": {
                            "mode": "chose",
                            "label": "Hide Additional Options"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "joggai"
                            },
                            "label": "u (u7008793060)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:joggai",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "avatar_type",
                        "type": "select",
                        "label": "Avatar Type",
                        "required": true,
                        "validate": {
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "avatar_id",
                        "type": "integer",
                        "label": "Avatar ID",
                        "required": true
                    },
                    {
                        "name": "voice_id",
                        "type": "text",
                        "label": "Voice ID",
                        "required": true
                    },
                    {
                        "name": "screen_style",
                        "type": "select",
                        "label": "Screen Style",
                        "required": true,
                        "validate": {
                            "enum": [
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "name": "audioSource",
                        "type": "select",
                        "label": "Audio Source",
                        "required": true,
                        "validate": {
                            "enum": [
                                "script",
                                "audio_url"
                            ]
                        }
                    },
                    {
                        "name": "additionalOptions",
                        "type": "select",
                        "label": "Additional Options",
                        "required": true,
                        "validate": {
                            "enum": [
                                "show",
                                "hide"
                            ]
                        }
                    },
                    {
                        "name": "script",
                        "type": "text",
                        "label": "Script"
                    }
                ]
            }
        },
        {
            "id": 2,
            "module": "util:FunctionSleep",
            "version": 1,
            "parameters": {},
            "mapper": {
                "duration": "30"
            },
            "metadata": {
                "designer": {
                    "x": 1800,
                    "y": 0
                },
                "restore": {},
                "expect": [
                    {
                        "name": "duration",
                        "type": "uinteger",
                        "label": "Delay",
                        "required": true,
                        "validate": {
                            "max": 300,
                            "min": 1
                        }
                    }
                ]
            }
        },
        {
            "id": 3,
            "module": "joggai:GetGeneratedVideo",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 11539641
            },
            "mapper": {
                "project_id": "{{8.data.project_id}}"
            },
            "metadata": {
                "designer": {
                    "x": 2100,
                    "y": 0
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "joggai"
                            },
                            "label": "u (u7008793060)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:joggai",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "project_id",
                        "type": "text",
                        "label": "Video ID",
                        "required": true
                    },
                    {
                        "name": "project_id",
                        "type": "text",
                        "label": "Video ID",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 12,
            "module": "util:FunctionSleep",
            "version": 1,
            "parameters": {},
            "mapper": {
                "duration": "15"
            },
            "metadata": {
                "designer": {
                    "x": 2400,
                    "y": 0
                },
                "restore": {},
                "expect": [
                    {
                        "name": "duration",
                        "type": "uinteger",
                        "label": "Delay",
                        "required": true,
                        "validate": {
                            "max": 300,
                            "min": 1
                        }
                    }
                ]
            }
        },
        {
            "id": 15,
            "module": "http:ActionGetFile",
            "version": 3,
            "parameters": {
                "handleErrors": false
            },
            "mapper": {
                "url": "{{3.data.video_url}}",
                "method": "get",
                "serializeUrl": false,
                "shareCookies": false
            },
            "metadata": {
                "designer": {
                    "x": 2700,
                    "y": 0
                },
                "restore": {},
                "parameters": [
                    {
                        "name": "handleErrors",
                        "type": "boolean",
                        "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "url",
                        "type": "url",
                        "label": "URL",
                        "required": true
                    },
                    {
                        "name": "serializeUrl",
                        "type": "boolean",
                        "label": "Serialize URL",
                        "required": true
                    },
                    {
                        "name": "method",
                        "type": "hidden",
                        "label": "Method"
                    },
                    {
                        "name": "shareCookies",
                        "type": "boolean",
                        "label": "Share cookies with other HTTP modules",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 4,
            "module": "youtube:uploadVideo",
            "version": 4,
            "parameters": {
                "__IMTCONN__": 11546915
            },
            "mapper": {
                "data": "{{15.data}}",
                "tags": [
                    "{{10.result.tags}}"
                ],
                "title": "{{10.result.title}}",
                "fileName": "{{15.fileName}}",
                "categoryId": "25",
                "description": "{{10.result.description}}",
                "privacyStatus": "public",
                "notifySubscribers": true,
                "containsSyntheticMedia": true,
                "selfDeclaredMadeForKids": false
            },
            "metadata": {
                "designer": {
                    "x": 3000,
                    "y": 0
                },
                "restore": {
                    "expect": {
                        "tags": {
                            "mode": "chose",
                            "items": [
                                null
                            ]
                        },
                        "license": {
                            "mode": "chose",
                            "label": "Empty"
                        },
                        "categoryId": {
                            "mode": "chose",
                            "label": "News & Politics"
                        },
                        "embeddable": {
                            "mode": "chose"
                        },
                        "privacyStatus": {
                            "mode": "chose",
                            "label": "Public"
                        },
                        "notifySubscribers": {
                            "mode": "chose"
                        },
                        "containsSyntheticMedia": {
                            "mode": "chose"
                        },
                        "selfDeclaredMadeForKids": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "youtube"
                            },
                            "label": "testtttttttt (Romain Taugourdeau <romtaug@gmail.com>)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:youtube",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "type": "hidden"
                    },
                    {
                        "name": "title",
                        "type": "text",
                        "label": "Title",
                        "required": true,
                        "validate": {
                            "max": 100
                        }
                    },
                    {
                        "name": "fileName",
                        "type": "filename",
                        "label": "File Name",
                        "required": true
                    },
                    {
                        "name": "data",
                        "type": "buffer",
                        "label": "Data",
                        "required": true
                    },
                    {
                        "name": "categoryId",
                        "type": "select",
                        "label": "Video Category",
                        "required": true
                    },
                    {
                        "name": "privacyStatus",
                        "type": "select",
                        "label": "Privacy Status and Scheduling",
                        "required": true,
                        "validate": {
                            "enum": [
                                "private",
                                "unlisted",
                                "public"
                            ]
                        }
                    },
                    {
                        "name": "description",
                        "type": "text",
                        "label": "Description",
                        "validate": {
                            "max": 5000
                        }
                    },
                    {
                        "name": "selfDeclaredMadeForKids",
                        "type": "boolean",
                        "label": "**The video is made for kids**",
                        "required": true
                    },
                    {
                        "name": "containsSyntheticMedia",
                        "type": "boolean",
                        "label": "**The video contains altered/synthetic media**",
                        "required": true
                    },
                    {
                        "name": "tags",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Tag",
                            "required": true,
                            "validate": {
                                "max": 500
                            }
                        },
                        "type": "array",
                        "label": "Tags"
                    },
                    {
                        "name": "recordingDate",
                        "type": "date",
                        "label": "Recording Date"
                    },
                    {
                        "name": "license",
                        "type": "select",
                        "label": "License",
                        "validate": {
                            "enum": [
                                "youtube",
                                "creativeCommon"
                            ]
                        }
                    },
                    {
                        "name": "embeddable",
                        "type": "boolean",
                        "label": "Allow Embedding"
                    },
                    {
                        "name": "notifySubscribers",
                        "type": "boolean",
                        "label": "Notify Subscribers"
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 18,
            "module": "util:FunctionSleep",
            "version": 1,
            "parameters": {},
            "mapper": {
                "duration": "30"
            },
            "metadata": {
                "designer": {
                    "x": 3300,
                    "y": 0
                },
                "restore": {},
                "expect": [
                    {
                        "name": "duration",
                        "type": "uinteger",
                        "label": "Delay",
                        "required": true,
                        "validate": {
                            "max": 300,
                            "min": 1
                        }
                    }
                ]
            }
        },
        {
            "id": 17,
            "module": "youtube:universal",
            "version": 4,
            "parameters": {
                "__IMTCONN__": 11744040
            },
            "mapper": {
                "url": "/v3/commentThreads?part=snippet",
                "body": "{\r\n  \"snippet\": {\r\n    \"videoId\": \"{{4.id}}\",\r\n    \"topLevelComment\": {\r\n      \"snippet\": {\r\n        \"textOriginal\": \"{{10.result.comment}}\"\r\n      }\r\n    }\r\n  }\r\n}",
                "method": "POST",
                "headers": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ]
            },
            "metadata": {
                "designer": {
                    "x": 3600,
                    "y": 0
                },
                "restore": {
                    "expect": {
                        "qs": {
                            "mode": "chose"
                        },
                        "method": {
                            "mode": "chose",
                            "label": "POST"
                        },
                        "headers": {
                            "mode": "chose",
                            "items": [
                                null
                            ]
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "youtube"
                            },
                            "label": "My YouTube connection (Romain Taugourdeau <romtaug@gmail.com>)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:youtube",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "url",
                        "type": "text",
                        "label": "URL",
                        "required": true
                    },
                    {
                        "name": "method",
                        "type": "select",
                        "label": "Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "GET",
                                "POST",
                                "PUT",
                                "PATCH",
                                "DELETE"
                            ]
                        }
                    },
                    {
                        "name": "headers",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Key"
                                },
                                {
                                    "name": "value",
                                    "type": "text",
                                    "label": "Value"
                                }
                            ],
                            "type": "collection",
                            "label": "Header"
                        },
                        "type": "array",
                        "label": "Headers"
                    },
                    {
                        "name": "qs",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Key"
                                },
                                {
                                    "name": "value",
                                    "type": "text",
                                    "label": "Value"
                                }
                            ],
                            "type": "collection",
                            "label": "Query Parameter"
                        },
                        "type": "array",
                        "label": "Query String"
                    },
                    {
                        "name": "body",
                        "type": "any",
                        "label": "Body"
                    }
                ]
            }
        }
    ],
    "metadata": {
        "instant": false,
        "version": 1,
        "scenario": {
            "roundtrips": 1,
            "maxErrors": 3,
            "autoCommit": true,
            "autoCommitTriggerLast": true,
            "sequential": false,
            "slots": null
        },
        "designer": {
            "orphans": []
        },
        "zone": "eu2.make.com",
        "notes": []
    }
}
